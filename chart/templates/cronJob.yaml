apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "k8s-backup-mysql.fullname" . }}
  labels:
    {{- include "k8s-backup-mysql.labels" . | nindent 4 }}
spec:
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        metadata:
          {{- with .Values.podAnnotations }}
          annotations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          labels:
            {{- include "k8s-backup-mysql.labels" . | nindent 12 }}
            {{- with .Values.podLabels }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
        spec:
          restartPolicy: "OnFailure"
          containers:
            - name: backup
              env:
                - name: DEBUG
                  value: "truthy"
                - name: AWS_ACCESS_KEY_ID
                  valueFrom:
                      secretKeyRef:
                        name: {{ include "secretName" . }}
                        key: aws_access_key_id
                - name: AWS_SECRET_ACCESS_KEY
                  valueFrom:
                      secretKeyRef:
                        name: {{ include "secretName" . }}
                        key: aws_secret_access_key
                {{- if ne .Values.bucket.region "" }}
                - name: AWS_DEFAULT_REGION
                  value: "{{ .Values.bucket.region }}"
                {{- end }}
                - name: AWS_BUCKET_URI
                  value: "{{ .Values.bucket.url }}"
                - name: BACKUP_PREFIX
                  value: "{{ .Values.bucket.prefix }}"
                {{- if (len .Values.bucket.s3_options) }}
                - name: S3_OPTIONS
                  value: {{ join " " .Values.bucket.s3_options }}
                {{- end }}
                - name: TARGET_DATABASES
                  value: "{{ .Values.database.names | join "," }}"
                {{- if .Values.notify.enabled }}
                - name: NOTIFY_ENABLED
                  value: "true"
                - name: NOTIFY_CHANNEL
                  valueFrom:
                    secretKeyRef:
                      name: {{ include "secretName" . }}
                      key: channel
                - name: NOTIFICATION_WEBHOOK_URL
                  valueFrom:
                    secretKeyRef:
                      name: {{ include "secretName" . }}
                      key: webhookUrl
                {{- end }}
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              resources:
                {{- toYaml .Values.resources | nindent 16 }}
              volumeMounts:
                - name: mycnf
                  mountPath: "/etc/mysql"
                  readOnly: true
              {{- with .Values.volumeMounts }}
                {{- toYaml . | nindent 16 }}
              {{- end }}
          volumes:
            - name: mycnf
              secret:
                secretName: {{ include "secretName" . }}
                optional: true
          {{- with .Values.volumes }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
  schedule: {{ .Values.schedule }}
